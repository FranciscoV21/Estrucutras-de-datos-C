#include <stdio.h>
#define SET_CAPACITY 10

//Prototipos
typedef struct
{
    int data[SET_CAPACITY];
    int size;
}Set;
int addElement(Set *s, int value);
int existElement(Set s, int value);
void setupSet(Set* s);

//PROTOTIPOS

int main()
{
    Set set;
    int r;

    setupSet(&set);

    r = addElement(&set, 1);
    r = addElement(&set, 2);
    r = addElement(&set, 3);
    r = addElement(&set, 4);
    r = addElement(&set, 5);
    r = addElement(&set, 6);
    r = addElement(&set, 7);
    r = addElement(&set, 8);
    r = addElement(&set, 9);
    r = addElement(&set, 10);
    r = addElement(&set, 11);
    for(int i = 0;i < SET_CAPACITY;i++)
        printf("-%d-\n",set.data);
    return 0;
}

int addElement(Set *s, int value)
{
    if(existElement(*s, value) == 0 && s->size < SET_CAPACITY)
    {
        s->data[s->size] = value;
        s->size++;
        return 1;
    }
    return 0;
}

int existElement(Set s, int value)
{
    for(int i =0; i < s.size;i++)
    {
        if(s.data[i] == value)
            return 1;
    }
    return 0;
}

void setupSet(Set* s)
{
    s->size = 0;
}
